#!/usr/bin/env bash
set -e
[ -n "${KOPSENV_DEBUG}" ] && set -x
source ${KOPSENV_ROOT}/libexec/helpers

if [ ${#} -ne 0 ];then
  echo "usage: kopsenv list-remote" 1>&2
  exit 1
fi

platform="$(kops_platform)"
(( "$?" )) && exit $?

# This is a bit hacky since it's relying on the formatting of URLs
# returned in JSON output from the github API, but there's no other
# reasonable way to get a list of the current kops versions using
# only curl + POSIX tools

json=$(curlw -s -L https://api.github.com/repos/kubernetes/kops/releases\?per_page=100)
(( "$?" )) && exit $?
http_status=$(echo "$json" | grep HTTP_RESPONSE_CODE |  awk '{print $2}')
if [[ "${http_status}" != 2* ]]
then
   echo "Github API response error:
$json"
   exit 1
fi 

json2=$(curlw -s -L https://api.github.com/repos/spotinst/kubernetes-kops/releases\?per_page=100)
http_status=$(echo "$json2" | grep HTTP_RESPONSE_CODE |  awk '{print $2}')
if [[ "${http_status}" != 2* ]] 
then 
   echo "Github API response error:
${json2}"
   exit 1
fi 

(( "$?" )) && exit $?
output="$(echo "${json}" \
  | grep 'download/[v]\?[0-9\.]\{1,\}/kops-'$platform'"' \
  | sed 's/^.*download\///; s/\/.*$//')"

output="${output}
$(echo "${json2}" \
  | grep 'download/[v]\?[0-9\.].*/kops-'$platform'"' \
  | sed 's/^.*download\///; s/\/.*$/-spotinst/')"

echo "$output" \
  | sort -t. -r -k1,1 -k2,2 -k3,3 -k4,4 \
  | uniq
